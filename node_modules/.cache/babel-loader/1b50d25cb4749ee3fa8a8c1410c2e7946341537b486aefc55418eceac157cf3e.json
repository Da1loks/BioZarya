{"ast":null,"code":"import{useState,useEffect,useRef}from'react';import'./App.css';import*as THREE from'three';import{OrbitControls}from'three/examples/jsm/controls/OrbitControls';import{GLTFLoader}from'three/examples/jsm/loaders/GLTFLoader';import{BrowserRouter,Routes,Route,Link}from'react-router-dom';import Bones from'./pages/Bones';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[searchQuery,setSearchQuery]=useState('');const[isMobileView,setIsMobileView]=useState(false);const searchInputRef=useRef(null);const skullContainerRef=useRef(null);const skullModelRef=useRef(null);useEffect(()=>{const checkIfMobile=()=>{setIsMobileView(window.innerWidth<=768);};checkIfMobile();window.addEventListener('resize',checkIfMobile);return()=>window.removeEventListener('resize',checkIfMobile);},[]);useEffect(()=>{if(isMobileView||!skullContainerRef.current)return;const scene=new THREE.Scene();const camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,0.1,1000);const renderer=new THREE.WebGLRenderer({antialias:true,alpha:true});renderer.setSize(window.innerWidth,window.innerHeight);renderer.setClearColor(0x000000,0);skullContainerRef.current.appendChild(renderer.domElement);const ambientLight=new THREE.AmbientLight(0xffffff,0.3);scene.add(ambientLight);const directionalLight=new THREE.DirectionalLight(0xffffff,0.7);directionalLight.position.set(10,10,5);scene.add(directionalLight);// Добавим точечный свет для лучшего отображения деталей\nconst pointLight=new THREE.PointLight(0xffffff,0.4,100);pointLight.position.set(-5,0,2);scene.add(pointLight);// Добавим мягкий свет снизу для подсветки черепа\nconst bottomLight=new THREE.PointLight(0xaaaaff,0.1,50);bottomLight.position.set(2,-5,2);scene.add(bottomLight);camera.position.z=5;let currentScale=1.1;const calculateScale=()=>{let baseScale=1.1;const width=window.innerWidth;const height=window.innerHeight;if(width<1024){baseScale=1.0;}else if(width>=1920){baseScale=1.2;}if(height<600){baseScale*=0.9;}else if(height>1200){baseScale*=1.1;}return baseScale;};currentScale=calculateScale();// Создаем простую геометрию в качестве заглушки\nconst sphereGeometry=new THREE.SphereGeometry(1.5,32,32);const sphereMaterial=new THREE.MeshStandardMaterial({color:0xeeeeee,roughness:0.65,metalness:0.2,emissive:0x000000,emissiveIntensity:0});const sphere=new THREE.Mesh(sphereGeometry,sphereMaterial);sphere.position.set(2,0,0);scene.add(sphere);// Пытаемся загрузить модель\nconst loader=new GLTFLoader();const modelPath='/models/skull.glb';loader.load(modelPath,gltf=>{if(skullModelRef.current){scene.remove(skullModelRef.current);}// Удаляем заглушку\nscene.remove(sphere);const skull=gltf.scene;skull.scale.set(currentScale,currentScale,currentScale);const xOffset=window.innerWidth>768?2.5:1;skull.position.set(xOffset,0,0);skull.rotation.y=2*Math.PI/3;skull.traverse(child=>{if(child.isMesh){child.material.transparent=false;child.material.opacity=1.0;child.material.color=new THREE.Color(0xeeeeee);child.material.emissive=new THREE.Color(0x000000);child.material.emissiveIntensity=0;child.material.metalness=0.2;child.material.roughness=0.65;child.castShadow=true;child.receiveShadow=true;}});scene.add(skull);skullModelRef.current=skull;},xhr=>{console.log(xhr.loaded/xhr.total*100+'% загружено');},error=>{console.error('Ошибка загрузки модели:',error);// Оставляем сферу как заглушку\nskullModelRef.current=sphere;});renderer.shadowMap.enabled=true;renderer.shadowMap.type=THREE.PCFSoftShadowMap;directionalLight.castShadow=true;directionalLight.shadow.mapSize.width=1024;directionalLight.shadow.mapSize.height=1024;const baseRotationY=2*Math.PI/3;let rotationAngle=0;let currentRotationY=baseRotationY;let currentRotationX=0;let targetRotationY=baseRotationY;let targetRotationX=0;const smoothFactor=0.03;const animate=()=>{requestAnimationFrame(animate);if(skullModelRef.current){rotationAngle+=0.0005;targetRotationY=baseRotationY+Math.sin(rotationAngle)*0.6;targetRotationX=Math.sin(rotationAngle*0.5)*0.3;currentRotationY+=(targetRotationY-currentRotationY)*smoothFactor;currentRotationX+=(targetRotationX-currentRotationX)*smoothFactor;skullModelRef.current.rotation.y=currentRotationY;skullModelRef.current.rotation.x=currentRotationX;}renderer.render(scene,camera);};animate();const handleResize=()=>{if(window.innerWidth<=768){if(skullContainerRef.current){skullContainerRef.current.removeChild(renderer.domElement);}return;}camera.aspect=window.innerWidth/window.innerHeight;camera.updateProjectionMatrix();renderer.setSize(window.innerWidth,window.innerHeight);currentScale=calculateScale();if(skullModelRef.current){skullModelRef.current.scale.set(currentScale,currentScale,currentScale);const xOffset=window.innerWidth>768?2:1;skullModelRef.current.position.x=xOffset;}};window.addEventListener('resize',handleResize);return()=>{window.removeEventListener('resize',handleResize);if(skullContainerRef.current){skullContainerRef.current.removeChild(renderer.domElement);}renderer.dispose();scene.traverse(object=>{if(object.geometry)object.geometry.dispose();if(object.material){if(Array.isArray(object.material)){object.material.forEach(material=>material.dispose());}else{object.material.dispose();}}});};},[isMobileView]);useEffect(()=>{const handleKeyDown=e=>{if(!isMobileView&&e.ctrlKey&&e.key==='k'){var _searchInputRef$curre;e.preventDefault();(_searchInputRef$curre=searchInputRef.current)===null||_searchInputRef$curre===void 0?void 0:_searchInputRef$curre.focus();}};window.addEventListener('keydown',handleKeyDown);return()=>window.removeEventListener('keydown',handleKeyDown);},[isMobileView]);const handleSearch=e=>{e.preventDefault();console.log('Поиск по запросу:',searchQuery);};return/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"header\",children:/*#__PURE__*/_jsxs(\"nav\",{className:\"navigation\",children:[/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"logo\",children:\"BioZarya\"}),!isMobileView&&/*#__PURE__*/_jsx(\"div\",{className:\"search-container\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSearch,className:\"search-form\",children:[/*#__PURE__*/_jsx(\"input\",{ref:searchInputRef,type:\"text\",className:\"search-input\",placeholder:\"\\u041F\\u043E\\u0438\\u0441\\u043A...\",value:searchQuery,onChange:e=>setSearchQuery(e.target.value)}),/*#__PURE__*/_jsxs(\"div\",{className:\"search-shortcut\",children:[/*#__PURE__*/_jsxs(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",width:\"16\",height:\"16\",viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"currentColor\",strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\",children:[/*#__PURE__*/_jsx(\"circle\",{cx:\"11\",cy:\"11\",r:\"8\"}),/*#__PURE__*/_jsx(\"line\",{x1:\"21\",y1:\"21\",x2:\"16.65\",y2:\"16.65\"})]}),/*#__PURE__*/_jsx(\"span\",{className:\"keyboard-shortcut\",children:\"Ctrl K\"})]})]})})]})}),!isMobileView&&/*#__PURE__*/_jsxs(\"div\",{className:\"skull-flex-row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"skull-side-text\",children:\"\\u0411\\u0438\\u043E\\u0437\\u0430\\u0440\\u044F \\u0430\\u043D\\u0430\\u0442\\u043E\\u043C\\u0438\\u044F\"}),/*#__PURE__*/_jsx(\"div\",{className:\"skull-background\",ref:skullContainerRef})]}),/*#__PURE__*/_jsx(\"main\",{className:\"main-content\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(\"div\",{className:\"home-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"welcome-section\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u0414\\u043E\\u0431\\u0440\\u043E \\u043F\\u043E\\u0436\\u0430\\u043B\\u043E\\u0432\\u0430\\u0442\\u044C \\u043D\\u0430 BioZarya\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u041F\\u043E\\u0440\\u0442\\u0430\\u043B \\u043E\\u0431 \\u0430\\u043D\\u0430\\u0442\\u043E\\u043C\\u0438\\u0438 \\u0447\\u0435\\u043B\\u043E\\u0432\\u0435\\u043A\\u0430\"}),/*#__PURE__*/_jsx(\"div\",{className:\"sections-grid\",children:/*#__PURE__*/_jsxs(Link,{to:\"/bones\",className:\"section-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u041A\\u043E\\u0441\\u0442\\u0438 \\u0447\\u0435\\u043B\\u043E\\u0432\\u0435\\u043A\\u0430\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u0418\\u0437\\u0443\\u0447\\u0430\\u0439\\u0442\\u0435 \\u0441\\u0442\\u0440\\u043E\\u0435\\u043D\\u0438\\u0435, \\u0444\\u0443\\u043D\\u043A\\u0446\\u0438\\u0438 \\u0438 \\u0437\\u0430\\u0431\\u043E\\u043B\\u0435\\u0432\\u0430\\u043D\\u0438\\u044F \\u043A\\u043E\\u0441\\u0442\\u043D\\u043E\\u0439 \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u044B\"})]})})]})})}),/*#__PURE__*/_jsx(Route,{path:\"/bones\",element:/*#__PURE__*/_jsx(Bones,{})})]})}),/*#__PURE__*/_jsx(\"footer\",{className:\"footer\",children:/*#__PURE__*/_jsx(\"div\",{className:\"footer-content\",children:/*#__PURE__*/_jsx(\"p\",{className:\"authors-info\",children:\"\\u0421\\u0430\\u0439\\u0442 \\u0432\\u044B\\u043F\\u043E\\u043B\\u043D\\u0438\\u043B\\u0438: \\u0410\\u0431\\u0434\\u0440\\u0435\\u0435\\u0432 \\u0414\\u0430\\u043D\\u0438\\u0441 8-4 \\u0438 \\u0417\\u0430\\u0445\\u0430\\u0440\\u043A\\u0438\\u043D \\u041A\\u0438\\u0440\\u0438\\u043B\\u043B 8-4\"})})})]})});}export default App;","map":{"version":3,"names":["useState","useEffect","useRef","THREE","OrbitControls","GLTFLoader","BrowserRouter","Routes","Route","Link","Bones","jsx","_jsx","jsxs","_jsxs","App","searchQuery","setSearchQuery","isMobileView","setIsMobileView","searchInputRef","skullContainerRef","skullModelRef","checkIfMobile","window","innerWidth","addEventListener","removeEventListener","current","scene","Scene","camera","PerspectiveCamera","innerHeight","renderer","WebGLRenderer","antialias","alpha","setSize","setClearColor","appendChild","domElement","ambientLight","AmbientLight","add","directionalLight","DirectionalLight","position","set","pointLight","PointLight","bottomLight","z","currentScale","calculateScale","baseScale","width","height","sphereGeometry","SphereGeometry","sphereMaterial","MeshStandardMaterial","color","roughness","metalness","emissive","emissiveIntensity","sphere","Mesh","loader","modelPath","load","gltf","remove","skull","scale","xOffset","rotation","y","Math","PI","traverse","child","isMesh","material","transparent","opacity","Color","castShadow","receiveShadow","xhr","console","log","loaded","total","error","shadowMap","enabled","type","PCFSoftShadowMap","shadow","mapSize","baseRotationY","rotationAngle","currentRotationY","currentRotationX","targetRotationY","targetRotationX","smoothFactor","animate","requestAnimationFrame","sin","x","render","handleResize","removeChild","aspect","updateProjectionMatrix","dispose","object","geometry","Array","isArray","forEach","handleKeyDown","e","ctrlKey","key","_searchInputRef$curre","preventDefault","focus","handleSearch","children","className","to","onSubmit","ref","placeholder","value","onChange","target","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","path","element"],"sources":["D:/Проекты/biozarya/src/App.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport { BrowserRouter, Routes, Route, Link } from 'react-router-dom';\r\nimport Bones from './pages/Bones';\r\n\r\nfunction App() {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [isMobileView, setIsMobileView] = useState(false);\r\n  const searchInputRef = useRef(null);\r\n  const skullContainerRef = useRef(null);\r\n  const skullModelRef = useRef(null);\r\n  \r\n  useEffect(() => {\r\n    const checkIfMobile = () => {\r\n      setIsMobileView(window.innerWidth <= 768);\r\n    };\r\n    \r\n    checkIfMobile(); \r\n    window.addEventListener('resize', checkIfMobile);\r\n    return () => window.removeEventListener('resize', checkIfMobile);\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    if (isMobileView || !skullContainerRef.current) return;\r\n\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\r\n    \r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.setClearColor(0x000000, 0);\r\n    skullContainerRef.current.appendChild(renderer.domElement);\r\n    \r\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.3);\r\n    scene.add(ambientLight);\r\n    \r\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.7);\r\n    directionalLight.position.set(10, 10, 5);\r\n    scene.add(directionalLight);\r\n    \r\n    // Добавим точечный свет для лучшего отображения деталей\r\n    const pointLight = new THREE.PointLight(0xffffff, 0.4, 100);\r\n    pointLight.position.set(-5, 0, 2);\r\n    scene.add(pointLight);\r\n    \r\n    // Добавим мягкий свет снизу для подсветки черепа\r\n    const bottomLight = new THREE.PointLight(0xaaaaff, 0.1, 50);\r\n    bottomLight.position.set(2, -5, 2);\r\n    scene.add(bottomLight);\r\n    \r\n    camera.position.z = 5;\r\n    \r\n    let currentScale = 1.1;\r\n    \r\n    const calculateScale = () => {\r\n      let baseScale = 1.1;\r\n      const width = window.innerWidth;\r\n      const height = window.innerHeight;\r\n      \r\n      if (width < 1024) {\r\n        baseScale = 1.0;\r\n      } else if (width >= 1920) {\r\n        baseScale = 1.2;\r\n      }\r\n      \r\n      if (height < 600) {\r\n        baseScale *= 0.9;\r\n      } else if (height > 1200) {\r\n        baseScale *= 1.1;\r\n      }\r\n      \r\n      return baseScale;\r\n    };\r\n    \r\n    currentScale = calculateScale();\r\n    \r\n    // Создаем простую геометрию в качестве заглушки\r\n    const sphereGeometry = new THREE.SphereGeometry(1.5, 32, 32);\r\n    const sphereMaterial = new THREE.MeshStandardMaterial({ \r\n      color: 0xeeeeee,\r\n      roughness: 0.65,\r\n      metalness: 0.2,\r\n      emissive: 0x000000,\r\n      emissiveIntensity: 0\r\n    });\r\n    const sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);\r\n    sphere.position.set(2, 0, 0);\r\n    scene.add(sphere);\r\n    \r\n    // Пытаемся загрузить модель\r\n    const loader = new GLTFLoader();\r\n    const modelPath = '/models/skull.glb';\r\n    \r\n    loader.load(\r\n      modelPath,\r\n      (gltf) => {\r\n        if (skullModelRef.current) {\r\n          scene.remove(skullModelRef.current);\r\n        }\r\n        // Удаляем заглушку\r\n        scene.remove(sphere);\r\n        \r\n        const skull = gltf.scene;\r\n        skull.scale.set(currentScale, currentScale, currentScale);\r\n        const xOffset = window.innerWidth > 768 ? 2.5 : 1;\r\n        skull.position.set(xOffset, 0, 0);\r\n        skull.rotation.y = (2 * Math.PI) / 3;\r\n        skull.traverse((child) => {\r\n          if (child.isMesh) {\r\n            child.material.transparent = false;\r\n            child.material.opacity = 1.0;\r\n            child.material.color = new THREE.Color(0xeeeeee);\r\n            child.material.emissive = new THREE.Color(0x000000);\r\n            child.material.emissiveIntensity = 0;\r\n            child.material.metalness = 0.2;\r\n            child.material.roughness = 0.65;\r\n            child.castShadow = true;\r\n            child.receiveShadow = true;\r\n          }\r\n        });\r\n        scene.add(skull);\r\n        skullModelRef.current = skull;\r\n      },\r\n      (xhr) => {\r\n        console.log((xhr.loaded / xhr.total * 100) + '% загружено');\r\n      },\r\n      (error) => {\r\n        console.error('Ошибка загрузки модели:', error);\r\n        // Оставляем сферу как заглушку\r\n        skullModelRef.current = sphere;\r\n      }\r\n    );\r\n    \r\n    renderer.shadowMap.enabled = true;\r\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n    \r\n    directionalLight.castShadow = true;\r\n    directionalLight.shadow.mapSize.width = 1024;\r\n    directionalLight.shadow.mapSize.height = 1024;\r\n    \r\n    const baseRotationY = (2 * Math.PI) / 3;\r\n    let rotationAngle = 0;\r\n    let currentRotationY = baseRotationY;\r\n    let currentRotationX = 0;\r\n    let targetRotationY = baseRotationY;\r\n    let targetRotationX = 0;\r\n    \r\n    const smoothFactor = 0.03;\r\n    \r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      \r\n      if (skullModelRef.current) {\r\n        rotationAngle += 0.0005;\r\n        \r\n        targetRotationY = baseRotationY + Math.sin(rotationAngle) * 0.6;\r\n        targetRotationX = Math.sin(rotationAngle * 0.5) * 0.3;\r\n        \r\n        currentRotationY += (targetRotationY - currentRotationY) * smoothFactor;\r\n        currentRotationX += (targetRotationX - currentRotationX) * smoothFactor;\r\n        \r\n        skullModelRef.current.rotation.y = currentRotationY;\r\n        skullModelRef.current.rotation.x = currentRotationX;\r\n      }\r\n      \r\n      renderer.render(scene, camera);\r\n    };\r\n    \r\n    animate();\r\n    \r\n    const handleResize = () => {\r\n      if (window.innerWidth <= 768) {\r\n        if (skullContainerRef.current) {\r\n          skullContainerRef.current.removeChild(renderer.domElement);\r\n        }\r\n        return;\r\n      }\r\n      \r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n      \r\n      currentScale = calculateScale();\r\n      \r\n      if (skullModelRef.current) {\r\n        skullModelRef.current.scale.set(currentScale, currentScale, currentScale);\r\n        const xOffset = window.innerWidth > 768 ? 2 : 1;\r\n        skullModelRef.current.position.x = xOffset;\r\n      }\r\n    };\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n    \r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      if (skullContainerRef.current) {\r\n        skullContainerRef.current.removeChild(renderer.domElement);\r\n      }\r\n      renderer.dispose();\r\n      scene.traverse((object) => {\r\n        if (object.geometry) object.geometry.dispose();\r\n        if (object.material) {\r\n          if (Array.isArray(object.material)) {\r\n            object.material.forEach(material => material.dispose());\r\n          } else {\r\n            object.material.dispose();\r\n          }\r\n        }\r\n      });\r\n    };\r\n  }, [isMobileView]);\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      if (!isMobileView && e.ctrlKey && e.key === 'k') {\r\n        e.preventDefault();\r\n        searchInputRef.current?.focus();\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => window.removeEventListener('keydown', handleKeyDown);\r\n  }, [isMobileView]);\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    console.log('Поиск по запросу:', searchQuery);\r\n  };\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <header className=\"header\">\r\n          <nav className=\"navigation\">\r\n            <Link to=\"/\" className=\"logo\">BioZarya</Link>\r\n            {!isMobileView && (\r\n              <div className=\"search-container\">\r\n                <form onSubmit={handleSearch} className=\"search-form\">\r\n                  <input \r\n                    ref={searchInputRef}\r\n                    type=\"text\" \r\n                    className=\"search-input\" \r\n                    placeholder=\"Поиск...\" \r\n                    value={searchQuery}\r\n                    onChange={(e) => setSearchQuery(e.target.value)}\r\n                  />\r\n                  <div className=\"search-shortcut\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                      <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\r\n                      <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line>\r\n                    </svg>\r\n                    <span className=\"keyboard-shortcut\">Ctrl K</span>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            )}\r\n          </nav>\r\n        </header>\r\n        {!isMobileView && (\r\n          <div className=\"skull-flex-row\">\r\n            <div className=\"skull-side-text\">Биозаря анатомия</div>\r\n            <div className=\"skull-background\" ref={skullContainerRef}></div>\r\n          </div>\r\n        )}\r\n        <main className=\"main-content\">\r\n          <Routes>\r\n            <Route path=\"/\" element={\r\n              <div className=\"home-container\">\r\n                <div className=\"welcome-section\">\r\n                  <h1>Добро пожаловать на BioZarya</h1>\r\n                  <p>Портал об анатомии человека</p>\r\n                  <div className=\"sections-grid\">\r\n                    <Link to=\"/bones\" className=\"section-card\">\r\n                      <h3>Кости человека</h3>\r\n                      <p>Изучайте строение, функции и заболевания костной системы</p>\r\n                    </Link>\r\n                    {/* Другие разделы будут добавлены позже */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            } />\r\n            <Route path=\"/bones\" element={<Bones />} />\r\n          </Routes>\r\n        </main>\r\n        <footer className=\"footer\">\r\n          <div className=\"footer-content\">\r\n            <p className=\"authors-info\">Сайт выполнили: Абдреев Данис 8-4 и Захаркин Кирилл 8-4</p>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CACnD,MAAO,WAAW,CAClB,MAAO,GAAK,CAAAC,KAAK,KAAM,OAAO,CAC9B,OAASC,aAAa,KAAQ,2CAA2C,CACzE,OAASC,UAAU,KAAQ,uCAAuC,CAClE,OAASC,aAAa,CAAEC,MAAM,CAAEC,KAAK,CAAEC,IAAI,KAAQ,kBAAkB,CACrE,MAAO,CAAAC,KAAK,KAAM,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACkB,YAAY,CAAEC,eAAe,CAAC,CAAGnB,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAAAoB,cAAc,CAAGlB,MAAM,CAAC,IAAI,CAAC,CACnC,KAAM,CAAAmB,iBAAiB,CAAGnB,MAAM,CAAC,IAAI,CAAC,CACtC,KAAM,CAAAoB,aAAa,CAAGpB,MAAM,CAAC,IAAI,CAAC,CAElCD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAsB,aAAa,CAAGA,CAAA,GAAM,CAC1BJ,eAAe,CAACK,MAAM,CAACC,UAAU,EAAI,GAAG,CAAC,CAC3C,CAAC,CAEDF,aAAa,CAAC,CAAC,CACfC,MAAM,CAACE,gBAAgB,CAAC,QAAQ,CAAEH,aAAa,CAAC,CAChD,MAAO,IAAMC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,CAAEJ,aAAa,CAAC,CAClE,CAAC,CAAE,EAAE,CAAC,CAENtB,SAAS,CAAC,IAAM,CACd,GAAIiB,YAAY,EAAI,CAACG,iBAAiB,CAACO,OAAO,CAAE,OAEhD,KAAM,CAAAC,KAAK,CAAG,GAAI,CAAA1B,KAAK,CAAC2B,KAAK,CAAC,CAAC,CAC/B,KAAM,CAAAC,MAAM,CAAG,GAAI,CAAA5B,KAAK,CAAC6B,iBAAiB,CAAC,EAAE,CAAER,MAAM,CAACC,UAAU,CAAGD,MAAM,CAACS,WAAW,CAAE,GAAG,CAAE,IAAI,CAAC,CACjG,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAA/B,KAAK,CAACgC,aAAa,CAAC,CAAEC,SAAS,CAAE,IAAI,CAAEC,KAAK,CAAE,IAAK,CAAC,CAAC,CAE1EH,QAAQ,CAACI,OAAO,CAACd,MAAM,CAACC,UAAU,CAAED,MAAM,CAACS,WAAW,CAAC,CACvDC,QAAQ,CAACK,aAAa,CAAC,QAAQ,CAAE,CAAC,CAAC,CACnClB,iBAAiB,CAACO,OAAO,CAACY,WAAW,CAACN,QAAQ,CAACO,UAAU,CAAC,CAE1D,KAAM,CAAAC,YAAY,CAAG,GAAI,CAAAvC,KAAK,CAACwC,YAAY,CAAC,QAAQ,CAAE,GAAG,CAAC,CAC1Dd,KAAK,CAACe,GAAG,CAACF,YAAY,CAAC,CAEvB,KAAM,CAAAG,gBAAgB,CAAG,GAAI,CAAA1C,KAAK,CAAC2C,gBAAgB,CAAC,QAAQ,CAAE,GAAG,CAAC,CAClED,gBAAgB,CAACE,QAAQ,CAACC,GAAG,CAAC,EAAE,CAAE,EAAE,CAAE,CAAC,CAAC,CACxCnB,KAAK,CAACe,GAAG,CAACC,gBAAgB,CAAC,CAE3B;AACA,KAAM,CAAAI,UAAU,CAAG,GAAI,CAAA9C,KAAK,CAAC+C,UAAU,CAAC,QAAQ,CAAE,GAAG,CAAE,GAAG,CAAC,CAC3DD,UAAU,CAACF,QAAQ,CAACC,GAAG,CAAC,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACjCnB,KAAK,CAACe,GAAG,CAACK,UAAU,CAAC,CAErB;AACA,KAAM,CAAAE,WAAW,CAAG,GAAI,CAAAhD,KAAK,CAAC+C,UAAU,CAAC,QAAQ,CAAE,GAAG,CAAE,EAAE,CAAC,CAC3DC,WAAW,CAACJ,QAAQ,CAACC,GAAG,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAClCnB,KAAK,CAACe,GAAG,CAACO,WAAW,CAAC,CAEtBpB,MAAM,CAACgB,QAAQ,CAACK,CAAC,CAAG,CAAC,CAErB,GAAI,CAAAC,YAAY,CAAG,GAAG,CAEtB,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,GAAI,CAAAC,SAAS,CAAG,GAAG,CACnB,KAAM,CAAAC,KAAK,CAAGhC,MAAM,CAACC,UAAU,CAC/B,KAAM,CAAAgC,MAAM,CAAGjC,MAAM,CAACS,WAAW,CAEjC,GAAIuB,KAAK,CAAG,IAAI,CAAE,CAChBD,SAAS,CAAG,GAAG,CACjB,CAAC,IAAM,IAAIC,KAAK,EAAI,IAAI,CAAE,CACxBD,SAAS,CAAG,GAAG,CACjB,CAEA,GAAIE,MAAM,CAAG,GAAG,CAAE,CAChBF,SAAS,EAAI,GAAG,CAClB,CAAC,IAAM,IAAIE,MAAM,CAAG,IAAI,CAAE,CACxBF,SAAS,EAAI,GAAG,CAClB,CAEA,MAAO,CAAAA,SAAS,CAClB,CAAC,CAEDF,YAAY,CAAGC,cAAc,CAAC,CAAC,CAE/B;AACA,KAAM,CAAAI,cAAc,CAAG,GAAI,CAAAvD,KAAK,CAACwD,cAAc,CAAC,GAAG,CAAE,EAAE,CAAE,EAAE,CAAC,CAC5D,KAAM,CAAAC,cAAc,CAAG,GAAI,CAAAzD,KAAK,CAAC0D,oBAAoB,CAAC,CACpDC,KAAK,CAAE,QAAQ,CACfC,SAAS,CAAE,IAAI,CACfC,SAAS,CAAE,GAAG,CACdC,QAAQ,CAAE,QAAQ,CAClBC,iBAAiB,CAAE,CACrB,CAAC,CAAC,CACF,KAAM,CAAAC,MAAM,CAAG,GAAI,CAAAhE,KAAK,CAACiE,IAAI,CAACV,cAAc,CAAEE,cAAc,CAAC,CAC7DO,MAAM,CAACpB,QAAQ,CAACC,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAC5BnB,KAAK,CAACe,GAAG,CAACuB,MAAM,CAAC,CAEjB;AACA,KAAM,CAAAE,MAAM,CAAG,GAAI,CAAAhE,UAAU,CAAC,CAAC,CAC/B,KAAM,CAAAiE,SAAS,CAAG,mBAAmB,CAErCD,MAAM,CAACE,IAAI,CACTD,SAAS,CACRE,IAAI,EAAK,CACR,GAAIlD,aAAa,CAACM,OAAO,CAAE,CACzBC,KAAK,CAAC4C,MAAM,CAACnD,aAAa,CAACM,OAAO,CAAC,CACrC,CACA;AACAC,KAAK,CAAC4C,MAAM,CAACN,MAAM,CAAC,CAEpB,KAAM,CAAAO,KAAK,CAAGF,IAAI,CAAC3C,KAAK,CACxB6C,KAAK,CAACC,KAAK,CAAC3B,GAAG,CAACK,YAAY,CAAEA,YAAY,CAAEA,YAAY,CAAC,CACzD,KAAM,CAAAuB,OAAO,CAAGpD,MAAM,CAACC,UAAU,CAAG,GAAG,CAAG,GAAG,CAAG,CAAC,CACjDiD,KAAK,CAAC3B,QAAQ,CAACC,GAAG,CAAC4B,OAAO,CAAE,CAAC,CAAE,CAAC,CAAC,CACjCF,KAAK,CAACG,QAAQ,CAACC,CAAC,CAAI,CAAC,CAAGC,IAAI,CAACC,EAAE,CAAI,CAAC,CACpCN,KAAK,CAACO,QAAQ,CAAEC,KAAK,EAAK,CACxB,GAAIA,KAAK,CAACC,MAAM,CAAE,CAChBD,KAAK,CAACE,QAAQ,CAACC,WAAW,CAAG,KAAK,CAClCH,KAAK,CAACE,QAAQ,CAACE,OAAO,CAAG,GAAG,CAC5BJ,KAAK,CAACE,QAAQ,CAACtB,KAAK,CAAG,GAAI,CAAA3D,KAAK,CAACoF,KAAK,CAAC,QAAQ,CAAC,CAChDL,KAAK,CAACE,QAAQ,CAACnB,QAAQ,CAAG,GAAI,CAAA9D,KAAK,CAACoF,KAAK,CAAC,QAAQ,CAAC,CACnDL,KAAK,CAACE,QAAQ,CAAClB,iBAAiB,CAAG,CAAC,CACpCgB,KAAK,CAACE,QAAQ,CAACpB,SAAS,CAAG,GAAG,CAC9BkB,KAAK,CAACE,QAAQ,CAACrB,SAAS,CAAG,IAAI,CAC/BmB,KAAK,CAACM,UAAU,CAAG,IAAI,CACvBN,KAAK,CAACO,aAAa,CAAG,IAAI,CAC5B,CACF,CAAC,CAAC,CACF5D,KAAK,CAACe,GAAG,CAAC8B,KAAK,CAAC,CAChBpD,aAAa,CAACM,OAAO,CAAG8C,KAAK,CAC/B,CAAC,CACAgB,GAAG,EAAK,CACPC,OAAO,CAACC,GAAG,CAAEF,GAAG,CAACG,MAAM,CAAGH,GAAG,CAACI,KAAK,CAAG,GAAG,CAAI,aAAa,CAAC,CAC7D,CAAC,CACAC,KAAK,EAAK,CACTJ,OAAO,CAACI,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CAC/C;AACAzE,aAAa,CAACM,OAAO,CAAGuC,MAAM,CAChC,CACF,CAAC,CAEDjC,QAAQ,CAAC8D,SAAS,CAACC,OAAO,CAAG,IAAI,CACjC/D,QAAQ,CAAC8D,SAAS,CAACE,IAAI,CAAG/F,KAAK,CAACgG,gBAAgB,CAEhDtD,gBAAgB,CAAC2C,UAAU,CAAG,IAAI,CAClC3C,gBAAgB,CAACuD,MAAM,CAACC,OAAO,CAAC7C,KAAK,CAAG,IAAI,CAC5CX,gBAAgB,CAACuD,MAAM,CAACC,OAAO,CAAC5C,MAAM,CAAG,IAAI,CAE7C,KAAM,CAAA6C,aAAa,CAAI,CAAC,CAAGvB,IAAI,CAACC,EAAE,CAAI,CAAC,CACvC,GAAI,CAAAuB,aAAa,CAAG,CAAC,CACrB,GAAI,CAAAC,gBAAgB,CAAGF,aAAa,CACpC,GAAI,CAAAG,gBAAgB,CAAG,CAAC,CACxB,GAAI,CAAAC,eAAe,CAAGJ,aAAa,CACnC,GAAI,CAAAK,eAAe,CAAG,CAAC,CAEvB,KAAM,CAAAC,YAAY,CAAG,IAAI,CAEzB,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CACpBC,qBAAqB,CAACD,OAAO,CAAC,CAE9B,GAAIvF,aAAa,CAACM,OAAO,CAAE,CACzB2E,aAAa,EAAI,MAAM,CAEvBG,eAAe,CAAGJ,aAAa,CAAGvB,IAAI,CAACgC,GAAG,CAACR,aAAa,CAAC,CAAG,GAAG,CAC/DI,eAAe,CAAG5B,IAAI,CAACgC,GAAG,CAACR,aAAa,CAAG,GAAG,CAAC,CAAG,GAAG,CAErDC,gBAAgB,EAAI,CAACE,eAAe,CAAGF,gBAAgB,EAAII,YAAY,CACvEH,gBAAgB,EAAI,CAACE,eAAe,CAAGF,gBAAgB,EAAIG,YAAY,CAEvEtF,aAAa,CAACM,OAAO,CAACiD,QAAQ,CAACC,CAAC,CAAG0B,gBAAgB,CACnDlF,aAAa,CAACM,OAAO,CAACiD,QAAQ,CAACmC,CAAC,CAAGP,gBAAgB,CACrD,CAEAvE,QAAQ,CAAC+E,MAAM,CAACpF,KAAK,CAAEE,MAAM,CAAC,CAChC,CAAC,CAED8E,OAAO,CAAC,CAAC,CAET,KAAM,CAAAK,YAAY,CAAGA,CAAA,GAAM,CACzB,GAAI1F,MAAM,CAACC,UAAU,EAAI,GAAG,CAAE,CAC5B,GAAIJ,iBAAiB,CAACO,OAAO,CAAE,CAC7BP,iBAAiB,CAACO,OAAO,CAACuF,WAAW,CAACjF,QAAQ,CAACO,UAAU,CAAC,CAC5D,CACA,OACF,CAEAV,MAAM,CAACqF,MAAM,CAAG5F,MAAM,CAACC,UAAU,CAAGD,MAAM,CAACS,WAAW,CACtDF,MAAM,CAACsF,sBAAsB,CAAC,CAAC,CAC/BnF,QAAQ,CAACI,OAAO,CAACd,MAAM,CAACC,UAAU,CAAED,MAAM,CAACS,WAAW,CAAC,CAEvDoB,YAAY,CAAGC,cAAc,CAAC,CAAC,CAE/B,GAAIhC,aAAa,CAACM,OAAO,CAAE,CACzBN,aAAa,CAACM,OAAO,CAAC+C,KAAK,CAAC3B,GAAG,CAACK,YAAY,CAAEA,YAAY,CAAEA,YAAY,CAAC,CACzE,KAAM,CAAAuB,OAAO,CAAGpD,MAAM,CAACC,UAAU,CAAG,GAAG,CAAG,CAAC,CAAG,CAAC,CAC/CH,aAAa,CAACM,OAAO,CAACmB,QAAQ,CAACiE,CAAC,CAAGpC,OAAO,CAC5C,CACF,CAAC,CAEDpD,MAAM,CAACE,gBAAgB,CAAC,QAAQ,CAAEwF,YAAY,CAAC,CAE/C,MAAO,IAAM,CACX1F,MAAM,CAACG,mBAAmB,CAAC,QAAQ,CAAEuF,YAAY,CAAC,CAClD,GAAI7F,iBAAiB,CAACO,OAAO,CAAE,CAC7BP,iBAAiB,CAACO,OAAO,CAACuF,WAAW,CAACjF,QAAQ,CAACO,UAAU,CAAC,CAC5D,CACAP,QAAQ,CAACoF,OAAO,CAAC,CAAC,CAClBzF,KAAK,CAACoD,QAAQ,CAAEsC,MAAM,EAAK,CACzB,GAAIA,MAAM,CAACC,QAAQ,CAAED,MAAM,CAACC,QAAQ,CAACF,OAAO,CAAC,CAAC,CAC9C,GAAIC,MAAM,CAACnC,QAAQ,CAAE,CACnB,GAAIqC,KAAK,CAACC,OAAO,CAACH,MAAM,CAACnC,QAAQ,CAAC,CAAE,CAClCmC,MAAM,CAACnC,QAAQ,CAACuC,OAAO,CAACvC,QAAQ,EAAIA,QAAQ,CAACkC,OAAO,CAAC,CAAC,CAAC,CACzD,CAAC,IAAM,CACLC,MAAM,CAACnC,QAAQ,CAACkC,OAAO,CAAC,CAAC,CAC3B,CACF,CACF,CAAC,CAAC,CACJ,CAAC,CACH,CAAC,CAAE,CAACpG,YAAY,CAAC,CAAC,CAElBjB,SAAS,CAAC,IAAM,CACd,KAAM,CAAA2H,aAAa,CAAIC,CAAC,EAAK,CAC3B,GAAI,CAAC3G,YAAY,EAAI2G,CAAC,CAACC,OAAO,EAAID,CAAC,CAACE,GAAG,GAAK,GAAG,CAAE,KAAAC,qBAAA,CAC/CH,CAAC,CAACI,cAAc,CAAC,CAAC,CAClB,CAAAD,qBAAA,CAAA5G,cAAc,CAACQ,OAAO,UAAAoG,qBAAA,iBAAtBA,qBAAA,CAAwBE,KAAK,CAAC,CAAC,CACjC,CACF,CAAC,CAED1G,MAAM,CAACE,gBAAgB,CAAC,SAAS,CAAEkG,aAAa,CAAC,CACjD,MAAO,IAAMpG,MAAM,CAACG,mBAAmB,CAAC,SAAS,CAAEiG,aAAa,CAAC,CACnE,CAAC,CAAE,CAAC1G,YAAY,CAAC,CAAC,CAElB,KAAM,CAAAiH,YAAY,CAAIN,CAAC,EAAK,CAC1BA,CAAC,CAACI,cAAc,CAAC,CAAC,CAClBtC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAE5E,WAAW,CAAC,CAC/C,CAAC,CAED,mBACEJ,IAAA,CAACN,aAAa,EAAA8H,QAAA,cACZtH,KAAA,QAAKuH,SAAS,CAAC,KAAK,CAAAD,QAAA,eAClBxH,IAAA,WAAQyH,SAAS,CAAC,QAAQ,CAAAD,QAAA,cACxBtH,KAAA,QAAKuH,SAAS,CAAC,YAAY,CAAAD,QAAA,eACzBxH,IAAA,CAACH,IAAI,EAAC6H,EAAE,CAAC,GAAG,CAACD,SAAS,CAAC,MAAM,CAAAD,QAAA,CAAC,UAAQ,CAAM,CAAC,CAC5C,CAAClH,YAAY,eACZN,IAAA,QAAKyH,SAAS,CAAC,kBAAkB,CAAAD,QAAA,cAC/BtH,KAAA,SAAMyH,QAAQ,CAAEJ,YAAa,CAACE,SAAS,CAAC,aAAa,CAAAD,QAAA,eACnDxH,IAAA,UACE4H,GAAG,CAAEpH,cAAe,CACpB8E,IAAI,CAAC,MAAM,CACXmC,SAAS,CAAC,cAAc,CACxBI,WAAW,CAAC,mCAAU,CACtBC,KAAK,CAAE1H,WAAY,CACnB2H,QAAQ,CAAGd,CAAC,EAAK5G,cAAc,CAAC4G,CAAC,CAACe,MAAM,CAACF,KAAK,CAAE,CACjD,CAAC,cACF5H,KAAA,QAAKuH,SAAS,CAAC,iBAAiB,CAAAD,QAAA,eAC9BtH,KAAA,QAAK+H,KAAK,CAAC,4BAA4B,CAACrF,KAAK,CAAC,IAAI,CAACC,MAAM,CAAC,IAAI,CAACqF,OAAO,CAAC,WAAW,CAACC,IAAI,CAAC,MAAM,CAACC,MAAM,CAAC,cAAc,CAACC,WAAW,CAAC,GAAG,CAACC,aAAa,CAAC,OAAO,CAACC,cAAc,CAAC,OAAO,CAAAf,QAAA,eAC/KxH,IAAA,WAAQwI,EAAE,CAAC,IAAI,CAACC,EAAE,CAAC,IAAI,CAACC,CAAC,CAAC,GAAG,CAAS,CAAC,cACvC1I,IAAA,SAAM2I,EAAE,CAAC,IAAI,CAACC,EAAE,CAAC,IAAI,CAACC,EAAE,CAAC,OAAO,CAACC,EAAE,CAAC,OAAO,CAAO,CAAC,EAChD,CAAC,cACN9I,IAAA,SAAMyH,SAAS,CAAC,mBAAmB,CAAAD,QAAA,CAAC,QAAM,CAAM,CAAC,EAC9C,CAAC,EACF,CAAC,CACJ,CACN,EACE,CAAC,CACA,CAAC,CACR,CAAClH,YAAY,eACZJ,KAAA,QAAKuH,SAAS,CAAC,gBAAgB,CAAAD,QAAA,eAC7BxH,IAAA,QAAKyH,SAAS,CAAC,iBAAiB,CAAAD,QAAA,CAAC,6FAAgB,CAAK,CAAC,cACvDxH,IAAA,QAAKyH,SAAS,CAAC,kBAAkB,CAACG,GAAG,CAAEnH,iBAAkB,CAAM,CAAC,EAC7D,CACN,cACDT,IAAA,SAAMyH,SAAS,CAAC,cAAc,CAAAD,QAAA,cAC5BtH,KAAA,CAACP,MAAM,EAAA6H,QAAA,eACLxH,IAAA,CAACJ,KAAK,EAACmJ,IAAI,CAAC,GAAG,CAACC,OAAO,cACrBhJ,IAAA,QAAKyH,SAAS,CAAC,gBAAgB,CAAAD,QAAA,cAC7BtH,KAAA,QAAKuH,SAAS,CAAC,iBAAiB,CAAAD,QAAA,eAC9BxH,IAAA,OAAAwH,QAAA,CAAI,mHAA4B,CAAI,CAAC,cACrCxH,IAAA,MAAAwH,QAAA,CAAG,qJAA2B,CAAG,CAAC,cAClCxH,IAAA,QAAKyH,SAAS,CAAC,eAAe,CAAAD,QAAA,cAC5BtH,KAAA,CAACL,IAAI,EAAC6H,EAAE,CAAC,QAAQ,CAACD,SAAS,CAAC,cAAc,CAAAD,QAAA,eACxCxH,IAAA,OAAAwH,QAAA,CAAI,iFAAc,CAAI,CAAC,cACvBxH,IAAA,MAAAwH,QAAA,CAAG,+SAAwD,CAAG,CAAC,EAC3D,CAAC,CAEJ,CAAC,EACH,CAAC,CACH,CACN,CAAE,CAAC,cACJxH,IAAA,CAACJ,KAAK,EAACmJ,IAAI,CAAC,QAAQ,CAACC,OAAO,cAAEhJ,IAAA,CAACF,KAAK,GAAE,CAAE,CAAE,CAAC,EACrC,CAAC,CACL,CAAC,cACPE,IAAA,WAAQyH,SAAS,CAAC,QAAQ,CAAAD,QAAA,cACxBxH,IAAA,QAAKyH,SAAS,CAAC,gBAAgB,CAAAD,QAAA,cAC7BxH,IAAA,MAAGyH,SAAS,CAAC,cAAc,CAAAD,QAAA,CAAC,iQAAuD,CAAG,CAAC,CACpF,CAAC,CACA,CAAC,EACN,CAAC,CACO,CAAC,CAEpB,CAEA,cAAe,CAAArH,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}